{"version":3,"sources":["api.ts","providers/TodoProvider.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","catch","error","console","warn","TodoContext","createContext","TodoProvider","children","useState","todos","setTodos","query","setQuery","selectedTodo","setSelectedTodo","filter","setFilter","useEffect","getTodosFormApi","a","data","visibleTodos","useMemo","todosCopy","todo","completed","title","toLowerCase","includes","handleSelectTodo","handleClose","handleSelectFilter","newFilter","handleQueryChange","newQuery","value","Provider","useTodo","useContext","TodoList","className","map","isSelected","id","type","onClick","TodoFilter","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","user","setUser","userId","href","email","name","App","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86b74d22.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json())\n    .catch(error => {\n      // eslint-disable-next-line no-console\n      console.warn(error);\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import {\n  createContext, FC, useContext, useEffect, useMemo, useState,\n} from 'react';\nimport { Todo } from '../types/Todo';\nimport { getTodos } from '../api';\n\ntype TodoContextType = {\n  todos: Todo[] | null;\n  visibleTodos: Todo[];\n  filter: string;\n  handleQueryChange: (newQuery: string) => void;\n  query: string;\n  handleSelectFilter: (newFilter: string) => void;\n  selectedTodo: Todo | null;\n  handleSelectTodo: (todo: Todo) => () => void;\n  handleClose: () => void;\n};\n\nconst TodoContext = createContext<TodoContextType>({} as TodoContextType);\n\ntype Props = {\n  children: React.ReactNode\n};\n\nexport const TodoProvider: FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<string>('');\n\n  useEffect(() => {\n    const getTodosFormApi = async () => {\n      const data: Todo[] = await getTodos();\n\n      setTodos(data);\n    };\n\n    getTodosFormApi();\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    let todosCopy = [...todos];\n\n    if (todos) {\n      switch (filter) {\n        case 'completed':\n          todosCopy = todosCopy.filter(todo => todo.completed);\n          break;\n        case 'active':\n          todosCopy = todosCopy.filter(todo => !todo.completed);\n          break;\n        default:\n          break;\n      }\n\n      if (query) {\n        todosCopy = todosCopy.filter(todo => (\n          todo.title.toLowerCase().includes(query.toLowerCase())\n        ));\n      }\n    }\n\n    return todosCopy;\n  }, [todos, query, filter]);\n\n  const handleSelectTodo = (todo: Todo) => () => {\n    setSelectedTodo(todo);\n  };\n\n  const handleClose = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleSelectFilter = (newFilter: string) => {\n    setFilter(newFilter);\n  };\n\n  const handleQueryChange = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  const value = useMemo(() => ({\n    todos,\n    visibleTodos,\n    filter,\n    handleSelectFilter,\n    query,\n    handleQueryChange,\n    selectedTodo,\n    handleSelectTodo,\n    handleClose,\n  }), [todos, visibleTodos, query, filter, selectedTodo]);\n\n  return (\n    <TodoContext.Provider value={value}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n\nexport const useTodo = () => useContext(TodoContext);\n","import React from 'react';\nimport { useTodo } from '../../providers/TodoProvider';\n\nexport const TodoList: React.FC = () => {\n  const { visibleTodos, selectedTodo, handleSelectTodo } = useTodo();\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => {\n          const isSelected = selectedTodo && todo.id === selectedTodo.id;\n\n          return (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n              className={isSelected ? 'has-background-info-light' : ''}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={`has-text-${todo.completed ? 'success' : 'danger'}`}>\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={handleSelectTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={`far fa-eye${isSelected ? '-slash' : ''}`} />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\nimport { useTodo } from '../../providers/TodoProvider';\n\nexport const TodoFilter: FC = () => {\n  const {\n    filter, handleSelectFilter, query, handleQueryChange,\n  } = useTodo();\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => handleSelectFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => handleQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleQueryChange('')}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { useTodo } from '../../providers/TodoProvider';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const { selectedTodo, handleClose } = useTodo();\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then(setUser);\n    }\n  }, [selectedTodo]);\n\n  if (!selectedTodo) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useTodo } from './providers/TodoProvider';\n\nexport const App: React.FC = () => {\n  const {\n    selectedTodo,\n    todos,\n  } = useTodo();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {todos?.length\n                ? (\n                  <TodoList />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoProvider } from './providers/TodoProvider';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}